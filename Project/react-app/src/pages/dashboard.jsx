import React, { useEffect } from 'react'

import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'

import { Button, Typography, useTheme } from '@mui/material'
import { signOut, useSession } from 'next-auth/react'

import ProjectList from '@/components/ProjectList'
import { useRouter } from 'next/router'
import ProfileView from '@/components/ProfileView'
import TopBar from '@/components/TopBar'
import { toast } from 'react-toastify'
import { Scrollbar } from 'react-scrollbars-custom'
import FollowingView from '@/components/FollowingView'

export default function Home() {
    const theme = useTheme()
    const session = useSession()
    const router = useRouter()

    const [projects, setProjects] = React.useState([])

    useEffect(() => {
        console.log(session)
        console.log(session.status)
        console.log(session.status === 'authenticated')
        if (session.status === 'authenticated') {
            console.log("Getting projects")
            const getProjects = async () => {
                console.log("Getting projects for real")
                const response = await fetch(`${process.env.NEXT_PUBLIC_PROJECT_API_URL}/get_dashboard/${session.data.user.account_id}`, {
                    method: 'GET',
                    headers: {
                        "Authorization": `Bearer ${session.data.token}`,
                        "content-type": "application/json",
                    }
                }).then((data) => {
                    console.log(data)
                    if (data.status === 200) {
                        return data.json()
                    } else {
                        toast.error("Error loading dashboard. Refresh the page to try again.")
                    }
                }).catch(err => {
                    console.log(err)
                    toast.error("Error loading dashboard. Refresh the page to try again.")
                })

                const sortedByLastUpdated = response?.sort((a, b) => {
                    return new Date(b.last_modified_date) - new Date(a.last_modified_date)
                })
                setProjects(sortedByLastUpdated)
            }
            getProjects()
        }
        if (session.status === 'unauthenticated') {
            router.push('/')
        }
    }, [session])

    return (
        <>
            <Head>
                <title>Dashboard - üï∏</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>üï∏Ô∏è</text></svg>"></link>
            </Head>
            <style>
                {`
          @keyframes rotate {
            from {
              transform: rotate(0deg);
            }
            to {
              transform: rotate(360deg);
            }
          }
        `}
            </style>
            <main style={{
                // backgroundColor: "#FF0000",
                color: theme.palette.text.primary,
                height: '100vh',
                display: 'flex',
                flexDirection: 'column',
                justifyContent: 'flex-start',
                alignItems: 'flex-start',
                position: 'relative',
                overflow: 'hidden',
                backgroundColor: theme.palette.background.default,
            }}>
                <div style={{
                    position: 'absolute',
                    top: "-50%",
                    left: "-50%",
                    width: '200vw',
                    height: '200vh',
                    zIndex: 0,
                    backgroundImage: 'url(/spiderweb.svg)',
                    backgroundSize: 'contain',
                    backgroundRepeat: 'no-repeat',
                    backgroundPosition: 'center',
                    animation: 'rotate 120s infinite linear',
                    color: "#130925" // This line doesn't change anything, but this is the hex code of the web svg
                }}></div>
                <TopBar
                    alternate
                    titleText={"Dashboard"}
                    backLocation={"/"}
                    showSignIn
                >

                </TopBar>
                <div style={{
                    width: '100%',
                    display: 'flex',
                    flexDirection: 'row',
                    justifyContent: 'flex-start',
                    alignItems: 'flex-start',
                    height: '100%',
                    zIndex: 1,
                }}>
                    <div style={{
                        display: 'flex',
                        flexDirection: 'column',
                        gap: '1rem',
                        justifyContent: 'flex-start',
                        alignItems: 'flex-start',
                        height: 'calc(100% - 2rem)',
                        padding: '1rem 0.5rem 1rem 1rem',
                        width: '370px',
                        minWidth: '370px',
                    }}>

                        <ProfileView />
                        <FollowingView following_account_id={session.data?.user.account_id} />
                    </div>
                    <Scrollbar>

                        <div style={{
                            display: 'flex',
                            flexDirection: 'column',
                            gap: '1rem',
                            justifyContent: 'flex-start',
                            alignItems: 'flex-start',
                            height: 'calc(100% - 2rem)',
                            padding: '1rem 1rem 1rem 0.5rem',
                            flexGrow: 1,
                        }}>
                            <ProjectList projects={projects} setProjects={setProjects} />
                        </div>
                    </Scrollbar>
                </div>



            </main>
        </>
    )
}
